name: Application CI
on: [push, pull_request]
jobs:
    pipeline:
        name: jhdemo pipeline
        runs-on: ubuntu-20.04
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
        timeout-minutes: 40
        env:
            NODE_VERSION: 12.16.1
            SPRING_OUTPUT_ANSI_ENABLED: DETECT
            SPRING_JPA_SHOW_SQL: false
            JHI_DISABLE_WEBPACK_LOGS: true
            NG_CLI_ANALYTICS: false
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 12.16.1
            - uses: actions/setup-java@v1
              with:
                  java-version: 11
            - name: Install node.js packages
              run: |
                java -version
                npm install
            - name: Run backend test
              run: |
                  java -version
                  chmod +x mvnw
                  ./mvnw -ntp clean verify -P-webpack
              env:
                NODE_VERSION: 12.16.1
            - name: Run frontend test
              run: |
                  java -version
                  npm run test
            - name: Analyze code with SonarQube
              continue-on-error: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: |
                  java -version
                  if [ -n $SONAR_TOKEN ]; then
                      ./mvnw -ntp initialize sonar:sonar -Dsonar.organization=${{ secrets.SONAR_ORGANISATION_KEY }} -Dsonar.host.url=https://sonarcloud.io
                  else
                      echo No SONAR_TOKEN, skipping...
                  fi
            - name: Package application
              run: |
                  java -version
                  echo "-------------------PREVIOUS SETTINGS.xml------------------------------"
                  cat ~/.m2/settings.xml
                  echo "-------------------PREVIOUS SETTINGS.xml------------------------------"
                  mv src/main/settings/settings.myartifactory.xml ~/.m2/settings.xml
                  echo "-------------------NEW SETTINGS.xml------------------------------"
                  cat ~/.m2/settings.xml
                  echo "-------------------NEW SETTINGS.xml------------------------------"
                  ./mvnw -ntp package deploy -Pprod -DskipTests
            - name: Deploy to Heroku
              if: github.event_name == 'push' && github.ref == 'refs/heads/master'
              env:
                  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
              run: ./mvnw -ntp com.heroku.sdk:heroku-maven-plugin:2.0.5:deploy -DskipTests -Pprod -Dheroku.buildpacks=heroku/java -Dheroku.appName=${{ secrets.HEROKU_APP_NAME_TEST }}
            - name: Build and publish docker image
              if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
              run: |
                  GIT_TAG=:${GITHUB_REF#refs/tags/}
                  DOCKER_TAG=${GIT_TAG#:refs/heads/master}
                  ./mvnw -ntp jib:build -Djib.to.image=jhipster/jhdemobilonjea${DOCKER_TAG} -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}"
